{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","state","text","render","className","onChange","handleChange","split","filter","paragraph","trim","length","map","includes","replace","src","event","console","log","target","value","update_tome","setState","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sNAmEeA,G,kNA7DXC,MAAQ,CACJC,KAAM,I,EAGVC,OAAS,WACL,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,iCACI,6CACA,0BAAUC,SAAU,EAAKC,oBAIjC,qBAAKF,UAAU,OAAf,SACI,qBAAKA,UAAU,UAAf,SACK,EAAKH,MAAMC,KACPK,MAAM,QACNC,QAAO,SAACC,GAAwB,OAAOA,EAAUC,OAAOC,UACxDC,KAAI,SAACH,GAEN,OAAIA,EAAUI,SAAS,YACZ,sBAAKT,UAAU,gBAAf,UACH,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,OAAf,SACKK,EAAUK,QAAQ,YAAa,QAGxC,qBAAKV,UAAU,YAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKW,IAAI,+BAMd,qBAAKX,UAAU,gBAAf,SACH,mBAAGA,UAAU,OAAb,SACKK,iB,EAWrCH,aAAe,SAACU,GACZC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,EAAKC,YAAYL,EAAMG,OAAOC,Q,EAGlCC,YAAc,SAACnB,GACX,EAAKoB,SAAS,CACVpB,KAAMA,K,YA1DAqB,IAAMC,YCUTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAAS/B,OACP,cAAC,IAAMgC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.abec70d3.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n\n    state = {\n        text: \"\"\n    }\n\n    render = () => {\n        return (\n            <div className=\"App\">\n                <div className=\"Writer\">\n                    <form>\n                        <h1>Writer mode</h1>\n                        <textarea onChange={this.handleChange}/>\n                    </form>\n\n                </div>\n                <div className=\"Tome\">\n                    <div className=\"Content\">\n                        {this.state.text\n                            .split(\"\\n\\n\")\n                            .filter((paragraph: string) => { return paragraph.trim().length })\n                            .map((paragraph: string) => {\n\n                            if (paragraph.includes(\"barchart\")) { // bartchart page\n                                return <div className=\"Page Barchart\">\n                                    <div className=\"Box Text\">\n                                        <div className=\"Text\">\n                                            {paragraph.replace(\"@barchart\", \"\")}\n                                        </div>\n                                    </div>\n                                    <div className=\"Box Chart\">\n                                        <div className=\"Chart\">\n                                            <img src=\"images/barchart.png\"/>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            } else { // text page\n                                return <div className=\"Page Box Text\">\n                                    <p className=\"Text\">\n                                        {paragraph}\n                                    </p>\n                                </div>\n                            }\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleChange = (event: any) => {\n        console.log(event.target.value)\n        this.update_tome(event.target.value)\n    }\n\n    update_tome = (text: string) => {\n        this.setState({\n            text: text\n        });\n    };\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}